{"total":6,"pageSize":10,"pageCount":1,"data":[{"title":"「NOI 2016」优秀的拆分","slug":"NOI-2016-优秀的拆分","date":"2018-12-28T09:42:56.000Z","updated":"2018-12-28T13:18:51.826Z","comments":true,"pin":null,"path":"api/articles/NOI-2016-优秀的拆分.json","excerpt":"","keywords":null,"cover":"/2018/12/28/NOI-2016-优秀的拆分/01.jpg","content":"<h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>如果一个字符串可以被拆分为 AABB 的形式，其中 A 和 B 是任意非空字符串，则我们称该字符串的这种拆分是优秀的。例如，对于字符串 aabaabaa，如果令 A=aab, B=a，我们就找到了这个字符串拆分成 AABB 的一种方式。一个字符串可能没有优秀的拆分，也可能存在不止一种优秀的拆分。现在给出一个长度为 n 的字符串 S，我们需要求出，在它所有子串的所有拆分方式中，优秀拆分的总个数。这里的子串是指字符串中连续的一段。以下事项需要注意：出现在不同位置的相同子串，我们认为是不同的子串，它们的优秀拆分均会被记入答案。在一个拆分中，允许出现 A=B。字符串本身也是它的一个子串。</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>每个输入文件包含多组数据。输入文件的第一行只有一个整数 T，表示数据的组数。</p>\n<p>接下来 T 行，每行包含一个仅由英文小写字母构成的字符串 S，意义如题所述。</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>输出 T 行，每行包含一个整数，表示字符串 S 所有子串的所有拆分中，总共有多少个是优秀的拆分。</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"LSL\"><figure class=\"iseeu highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">4</span></span><br><span class=\"line\">aabbbb</span><br><span class=\"line\">cccccc</span><br><span class=\"line\">aabaabaabaa</span><br><span class=\"line\">bbaabaababaaba</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"LSL\"><figure class=\"iseeu highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">7</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"HINT\"><a href=\"#HINT\" class=\"headerlink\" title=\"HINT\"></a>HINT</h2><p>$1≤T≤10, 1≤|S|≤30000$</p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><p>$AABB$ 相当于将两个连续的 $double$ 串拼接起来，设 $f[i]$ 表示以 $i$ 结尾的 $double$ 串有多少，$g[i]$ 表示以 $i$ 开始的 $double$ 串有多少，则答案为 $\\sum\\limits_{i=1}^{n}f[i]\\times g[i+1]$。</p>\n<p>接下来，我们利用后缀数组求出 $f$ 和 $g$。</p>\n<p>先正反做两遍后缀数组，枚举 $double$ 串的长度 $2\\times len$，在原串中每隔长度 $len$ 选取一个位置，枚举相邻的两个位置，得出它们左边字符串的 $lcs$（图1中上面两个字符串）和右边字符串的 $lcp$（图1中下面两个字符串），然后对图2中的紫色串到图3中的紫色串之间的所有长度为 $2\\times len$ 的子串统计答案。</p>\n<p><img src=\"/2018/12/28/NOI-2016-优秀的拆分/01.jpg\" alt=\"\"></p>\n<p><img src=\"/2018/12/28/NOI-2016-优秀的拆分/02.jpg\" alt=\"\"></p>\n<p><img src=\"/2018/12/28/NOI-2016-优秀的拆分/03.jpg\" alt=\"\"></p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n","text":"Description如果一个字符串可以被拆分为 AABB 的形式，其中 A 和 B 是任意非空字符串，则我们称该字符串的这种拆分是优秀的。例如，对于字符串 aabaabaa，如果令 A=aab, B=a，我们就找到了这个字符串拆分成 AABB 的一种方式。一个字符串可能没有优秀","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"后缀数组","slug":"后缀数组","count":3,"path":"api/tags/后缀数组.json"}]},{"title":"「BZOJ 2119」股市的预测","slug":"BZOJ-2119-股市的预测","date":"2018-12-28T08:50:13.000Z","updated":"2018-12-28T09:11:57.353Z","comments":true,"pin":null,"path":"api/articles/BZOJ-2119-股市的预测.json","excerpt":"","keywords":null,"cover":"https://www.lydsy.com/JudgeOnline/upload/201801/1111.png","content":"<h2 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h2><p>墨墨的妈妈热爱炒股，她要求墨墨为她编写一个软件，预测某只股票未来的走势。股票折线图是研究股票的必备工具，它通过一张时间与股票的价位的函数图像清晰地展示了股票的走势情况。经过长时间的观测，墨墨发现很多股票都有如下的规律：之前的走势很可能在短时间内重现！如图可以看到这只股票 A 部分的股价和 C 部分的股价的走势如出一辙。通过这个观测，墨墨认为他可能找到了一个预测股票未来走势的方法。进一步的研究可是难住了墨墨，他本想试图统计 B 部分的长度与发生这种情况的概率关系，不过由于数据量过于庞大，依赖人脑的力量难以完成，于是墨墨找到了善于编程的你，请你帮他找一找给定重现的间隔（B 部分的长度），有多少个时间段满足首尾部分的走势完全相同呢？当然，首尾部分的长度不能为零。</p>\n<p><img src=\"https://www.lydsy.com/JudgeOnline/upload/201801/1111.png\" alt=\"img\"></p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>第一行包含两个整数 N, M，分别表示需要统计的总时间以及重现的间隔（B 部分的长度）。</p>\n<p>接下来 N 行，每行一个整数，代表每一个时间点的股价。</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>输出一个整数，表示满足条件的时间段的个数</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASIC\"><figure class=\"iseeu highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">12 </span><span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">1 </span><span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">8</span> <span class=\"number\">9</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">8</span> <span class=\"number\">9</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"LSL\"><figure class=\"iseeu highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"HINT\"><a href=\"#HINT\" class=\"headerlink\" title=\"HINT\"></a>HINT</h2><p>6 个时间段分别是：3-9、2-10、2-8、1-9、3-11、4-12。</p>\n<p>​4 ≤ N ≤ 50000, 1 ≤ M ≤ 10, M ≤ N，所有出现的整数均不超过 32 位含符号整数。</p>\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2>","text":"Description墨墨的妈妈热爱炒股，她要求墨墨为她编写一个软件，预测某只股票未来的走势。股票折线图是研究股票的必备工具，它通过一张时间与股票的价位的函数图像清晰地展示了股票的走势情况。经过长时间的观测，墨墨发现很多股票都有如下的规律：之前的走势很可能在短时间内重现！如图可以","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"后缀数组","slug":"后缀数组","count":3,"path":"api/tags/后缀数组.json"}]},{"title":"「NOI 2015」品酒大会","slug":"NOI-2015-品酒大会","date":"2018-12-28T03:16:32.000Z","updated":"2018-12-28T08:59:19.432Z","comments":true,"pin":null,"path":"api/articles/NOI-2015-品酒大会.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>一年一度的“幻影阁夏日品酒大会”隆重开幕了。大会包含品尝和趣味挑战两个环节，分别向优胜者颁发“首席品酒家”和“首席猎手”两个奖项，吸引了众多品酒师参加。</p>\n<p>在大会的晚餐上，调酒师 Rainbow 调制了 $n$ 杯鸡尾酒。这 $n$ 杯鸡尾酒排成一行，其中第 $i$ 杯酒 $(1≤i≤n)$ 被贴上了一个标签 $s_i$，每个标签都是 $26$ 个小写英文字母之一。设 $str(l,r)$ 表示第 $l$ 杯酒到第 $r$ 杯酒的 $r−l+1$ 标签顺次连接构成的字符串。若 $str(p,po)=str(q,qo)$，其中 $1≤p≤po≤n,1≤q≤qo≤n,p≠q,po−p+1=qo−q+1=r$，则称第 $p$ 杯酒与第 $q$ 杯酒是“$r$相似” 的。当然两杯“$r$相似”$(r&gt;1)$ 的酒同时也是“$1$相似”、“$2$相似”、……、“$(r−1)$相似”的。特别地，对于任意的 $1≤p,q≤n,p≠q$，第 $p$ 杯酒和第 $q$ 杯酒都是“$0$相似”的。</p>\n<p>在品尝环节上，品酒师 Freda 轻松地评定了每一杯酒的美味度，凭借其专业的水准和经验成功夺取了“首席品酒家”的称号，其中第 $i$ 杯酒 $(1≤i≤n)$ 的美味度为 $a_i$。现在 Rainbow 公布了挑战环节的问题：本次大会调制的鸡尾酒有一个特点，如果把第 $p$ 杯酒与第 $q$ 杯酒调兑在一起，将得到一杯美味度为 $a_p\\times a_q$ 的酒。现在请各位品酒师分别对于 $r=0,1,2,…,n−1$，统计出有多少种方法可以选出 $2$ 杯“$r$相似”的酒,并回答选择 $2$ 杯“$r$相似”的酒调兑可以得到的美味度的最大值。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>输入文件的第 $1$ 行包含 $1$ 个正整数 $n$，表示鸡尾酒的杯数。</p>\n<p>第 $2$ 行包含一个长度为 $n$ 的字符串 $s$，其中第 $i$ 个字符表示第 $i$ 杯酒的标签。</p>\n<p>第 $3$ 行包含 $n$ 个整数，相邻整数之间用单个空格隔开，其中第 $i$ 个整数表示第 $i$ 杯酒的美味度 $a_i$。</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>输出文件包括 $n$ 行。第 $i$ 行输出 $2$ 个整数，中间用单个空格隔开。第 $1$ 个整数表示选出两杯“$(i−1)$相似”的酒的方案数，第 $2$ 个整数表示选出两杯“$(i−1)$相似”的酒调兑可以得到的最大美味度。若不存在两杯“$(i−1)$相似”的酒，这两个数均为 $0$。</p>\n<h2 id=\"输入样例\"><a href=\"#输入样例\" class=\"headerlink\" title=\"输入样例\"></a>输入样例</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"LSL\"><figure class=\"iseeu highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">10</span></span><br><span class=\"line\">ponoiiipoi</span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">4</span> <span class=\"number\">7</span> <span class=\"number\">4</span> <span class=\"number\">8</span> <span class=\"number\">3</span> <span class=\"number\">6</span> <span class=\"number\">4</span> <span class=\"number\">7</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"输出样例\"><a href=\"#输出样例\" class=\"headerlink\" title=\"输出样例\"></a>输出样例</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASIC\"><figure class=\"iseeu highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">45 </span><span class=\"number\">56</span></span><br><span class=\"line\"><span class=\"symbol\">10 </span><span class=\"number\">56</span></span><br><span class=\"line\"><span class=\"symbol\">3 </span><span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"数据范围与提示\"><a href=\"#数据范围与提示\" class=\"headerlink\" title=\"数据范围与提示\"></a>数据范围与提示</h2><p>$n\\leq300000$</p>\n<h2 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h2><p>将所有后缀按照 $height$ 从大到小排序，记排序后的数组为 $b$，$b[i]$ 表示 $height$ 第 $i$ 大的后缀位置，用并查集依次合并 $b[i]$ 与 $sa[rank[b[i]]-1]$，维护每个连通块的 $size$ 和最大最小值，合并时统计答案。</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">300005</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> fa[N], siz[N], mx[N], mn[N], sa[N], c[N], x[N], y[N], n, m = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[N]; <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[<span class=\"number\">2</span>][N];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (<span class=\"keyword\">const</span> Node &amp;rhs) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x &gt; rhs.x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; h[N];</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::max; <span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::min;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x == fa[x] ? x : fa[x] = find(fa[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build_sa</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) ++c[x[i]=s[i]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; m; ++i) c[i] += c[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; ~i; --i) sa[--c[x[i]]] = i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>, p = <span class=\"number\">0</span>; k &lt;= n; p = <span class=\"number\">0</span>, k &lt;&lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - k; i &lt; n; ++i) y[p++] = i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) <span class=\"keyword\">if</span> (sa[i] &gt;= k) y[p++] = sa[i] - k;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; ++i) c[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) ++c[x[y[i]]];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; m; ++i) c[i] += c[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; ~i; --i) sa[--c[x[y[i]]]] = y[i];</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::swap(x, y);</span><br><span class=\"line\">        p = <span class=\"number\">1</span>, x[sa[<span class=\"number\">0</span>]] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; ++i)</span><br><span class=\"line\">            x[sa[i]] = y[sa[i]] == y[sa[i<span class=\"number\">-1</span>]] &amp;&amp; (sa[i] + k &lt; n ? y[sa[i]+k] : <span class=\"number\">-1</span>) == (sa[i<span class=\"number\">-1</span>] + k &lt; n ? y[sa[i<span class=\"number\">-1</span>]+k] : <span class=\"number\">-1</span>) ? p - <span class=\"number\">1</span> : p++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p &gt;= n) <span class=\"keyword\">break</span>; m = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build_ht</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, k = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!x[i]) &#123; h[x[i]].y = sa[x[i]]; <span class=\"keyword\">continue</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k) --k;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = sa[x[i]<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i + k &lt; n &amp;&amp; j + k &lt; n &amp;&amp; s[i+k] == s[j+k]) ++k;</span><br><span class=\"line\">        h[x[i]].x = k, h[x[i]].y = sa[x[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%s\"</span>, &amp;n, s);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(ans[<span class=\"number\">1</span>], <span class=\"number\">0x80</span>, <span class=\"keyword\">sizeof</span> ans[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">        fa[i] = i, <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;mx[i]), mn[i] = mx[i], siz[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    build_sa(), build_ht(), <span class=\"built_in\">std</span>::sort(h, h + n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!x[h[i].y]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> fx = find(h[i].y), fy = find(sa[x[h[i].y]<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        ans[<span class=\"number\">0</span>][h[i].x] += <span class=\"number\">1L</span>L * siz[fx] * siz[fy];</span><br><span class=\"line\">        ans[<span class=\"number\">1</span>][h[i].x] = max(ans[<span class=\"number\">1</span>][h[i].x], max(<span class=\"number\">1L</span>L * mx[fx] * mx[fy], <span class=\"number\">1L</span>L * mn[fx] * mn[fy]));</span><br><span class=\"line\">        siz[fx] += siz[fy], mx[fx] = max(mx[fx], mx[fy]), mn[fx] = min(mn[fx], mn[fy]), fa[fy] = fx;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">2</span>; ~i; --i) ans[<span class=\"number\">0</span>][i] += ans[<span class=\"number\">0</span>][i+<span class=\"number\">1</span>], ans[<span class=\"number\">1</span>][i] = max(ans[<span class=\"number\">1</span>][i], ans[<span class=\"number\">1</span>][i+<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld %lld\\n\"</span>, ans[<span class=\"number\">0</span>][i], ans[<span class=\"number\">0</span>][i] ? ans[<span class=\"number\">1</span>][i] : <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n","text":"题目描述一年一度的“幻影阁夏日品酒大会”隆重开幕了。大会包含品尝和趣味挑战两个环节，分别向优胜者颁发“首席品酒家”和“首席猎手”两个奖项，吸引了众多品酒师参加。在大会的晚餐上，调酒师 Rainbow 调制了 $n$ 杯鸡尾酒。这 $n$ 杯鸡尾酒排成一行，其中第 $i$ 杯酒 $","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"后缀数组","slug":"后缀数组","count":3,"path":"api/tags/后缀数组.json"},{"name":"并查集","slug":"并查集","count":1,"path":"api/tags/并查集.json"}]},{"title":"「THUSC 2016」成绩单","slug":"THUSC-2016-成绩单","date":"2018-12-28T01:49:30.000Z","updated":"2018-12-28T08:59:25.718Z","comments":true,"pin":null,"path":"api/articles/THUSC-2016-成绩单.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>期末考试结束了，班主任 L 老师要将成绩单分发到每位同学手中。L 老师共有 $n$ 份成绩单，按照编号从 $1$ 到 $n$ 的顺序叠放在桌子上，其中编号为 $i$ 的成绩单分数为 $W_i$。</p>\n<p>成绩单是按照批次发放的。发放成绩单时，L 老师会从当前的一叠成绩单中抽取连续的一段，让这些同学来领取自己的成绩单。当这批同学领取完毕后，L 老师再从剩余的成绩单中抽取连续的一段，供下一批同学领取。经过若干批次的领取后，成绩单将被全部发放到同学手中。</p>\n<p>然而，分发成绩单是一件令人头痛的事情，一方面要照顾同学们的心理情绪，不能让分数相差太远的同学在同一批领取成绩单；另一方面要考虑时间成本，尽量减少领取成绩单的批次数。对于一个分发成绩单的方案，我们定义其代价为：</p>\n<p>$a \\times k+b \\times \\sum_{i=1}^{k}(\\text{max}_i-\\text{min}_i)^2$</p>\n<p>其中 $k$ 是分发的批次数，对于第 $i$ 批分发的成绩单，$\\text{max}_i$ 是最高分数，$\\text{min}_i$ 是最低分数，$a$ 和 $b$ 是给定的评估参数。 现在，请你帮助 L 老师找到代价最小的分发成绩单的方案，并将这个最小的代价告诉 L 老师。当然，分发成绩单的批次数 $k$ 是由你决定的。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>第一行包含一个正整数 $n$ ，表示成绩单的数量。 第二行包含两个非负整数 $a,b$，表示给定的评估参数。 第三行包含 $n$ 个正整数 ，$w_i$ 表示第 $i$ 张成绩单上的分数。</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>仅一个正整数，表示最小的代价是多少。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASIC\"><figure class=\"iseeu highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"symbol\">3 </span><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"symbol\">7 </span><span class=\"number\">10</span> <span class=\"number\">9</span> <span class=\"number\">10</span> <span class=\"number\">6</span> <span class=\"number\">7</span> <span class=\"number\">10</span> <span class=\"number\">7</span> <span class=\"number\">1</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"LSL\"><figure class=\"iseeu highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">15</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"数据范围与提示\"><a href=\"#数据范围与提示\" class=\"headerlink\" title=\"数据范围与提示\"></a>数据范围与提示</h2><p>$n \\leq 50, a \\leq 1500, b \\leq 10, w_i \\leq 1000$</p>\n<h2 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h2><p>设 $f[i][j]$ 表示把 $[i,j]$ 都拿光的最小代价，$g[i][j][k][l]$ 表示区间 $[i,j]$ 最后一次取的序列的最小值是 $k$，最大值是 $l$，且最后一次取的序列包含 $j$ 的最小代价。</p>\n<p>转移方程见代码。</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">52</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, a, b, m, d[N], w[N], f[N][N], g[N][N][N][N];</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::min; <span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::max;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>, &amp;n, &amp;a, &amp;b);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> f), <span class=\"built_in\">memset</span>(g, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> g);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;w[i]), d[i] = w[i];</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>);</span><br><span class=\"line\">    m = <span class=\"built_in\">std</span>::unique(d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>) - d - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i) &#123;</span><br><span class=\"line\">        w[i] = <span class=\"built_in\">std</span>::lower_bound(d + <span class=\"number\">1</span>, d + m + <span class=\"number\">1</span>, w[i]) - d;</span><br><span class=\"line\">        f[i][i] = a, g[i][i][w[i]][w[i]] = f[i][i<span class=\"number\">-1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    f[n+<span class=\"number\">1</span>][n] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> L = <span class=\"number\">2</span>; L &lt;= n; ++L)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> l = <span class=\"number\">1</span>, r = L; r &lt;= n; ++l, ++r) &#123;</span><br><span class=\"line\">            g[l][r][w[r]][w[r]] = f[l][r<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = l; i &lt; r; ++i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; ++j)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt;= m; ++k) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> x = min(j, w[r]), y = max(k, w[r]);</span><br><span class=\"line\">                        g[l][r][x][y] = min(g[l][r][x][y], g[l][i][j][k] + f[i+<span class=\"number\">1</span>][r<span class=\"number\">-1</span>]);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = l; i &lt;= r; ++i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; ++j)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt;= m; ++k)</span><br><span class=\"line\">                        f[l][r] = min(f[l][r], g[l][i][j][k] + f[i+<span class=\"number\">1</span>][r] + a + b * (d[k] - d[j]) * (d[k] - d[j]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, f[<span class=\"number\">1</span>][n]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n","text":"题目描述期末考试结束了，班主任 L 老师要将成绩单分发到每位同学手中。L 老师共有 $n$ 份成绩单，按照编号从 $1$ 到 $n$ 的顺序叠放在桌子上，其中编号为 $i$ 的成绩单分数为 $W_i$。成绩单是按照批次发放的。发放成绩单时，L 老师会从当前的一叠成绩单中抽取连续的","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"DP套DP","slug":"DP套DP","count":1,"path":"api/tags/DP套DP.json"}]},{"title":"Hexo博客搭建笔记","slug":"Hexo博客搭建笔记","date":"2018-12-28T00:49:30.000Z","updated":"2018-12-28T07:06:15.672Z","comments":true,"pin":null,"path":"api/articles/Hexo博客搭建笔记.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"Hexo博客搭建教程\"><a href=\"#Hexo博客搭建教程\" class=\"headerlink\" title=\"Hexo博客搭建教程\"></a>Hexo博客搭建教程</h3><p>详见<a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<h3 id=\"Hexo安装失败的解决方法\"><a href=\"#Hexo安装失败的解决方法\" class=\"headerlink\" title=\"Hexo安装失败的解决方法\"></a>Hexo安装失败的解决方法</h3><p>目前国内 $npm$ 源有问题，所以键入如下代码即可安装成功：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SQL\"><figure class=\"iseeu highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g cnpm <span class=\"comment\">--registry=https://registry.npm.taobao.org</span></span><br><span class=\"line\">cnpm <span class=\"keyword\">install</span> hexo-cli -g</span><br></pre></td></tr></table></figure></div>","text":"Hexo博客搭建教程详见这里Hexo安装失败的解决方法目前国内 $npm$ 源有问题，所以键入如下代码即可安装成功：1<br>2<br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br>cnpm i","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}]},{"title":"Hello World","slug":"hello-world","date":"2018-12-28T00:07:02.033Z","updated":"2018-11-29T12:09:49.761Z","comments":true,"pin":null,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}