{"name":"DP套DP","slug":"DP套DP","count":1,"posts":[{"title":"「THUSC 2016」成绩单","slug":"THUSC-2016-成绩单","date":"2018-12-28T01:49:30.000Z","updated":"2018-12-28T08:59:25.718Z","comments":true,"pin":null,"path":"api/articles/THUSC-2016-成绩单.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>期末考试结束了，班主任 L 老师要将成绩单分发到每位同学手中。L 老师共有 $n$ 份成绩单，按照编号从 $1$ 到 $n$ 的顺序叠放在桌子上，其中编号为 $i$ 的成绩单分数为 $W_i$。</p>\n<p>成绩单是按照批次发放的。发放成绩单时，L 老师会从当前的一叠成绩单中抽取连续的一段，让这些同学来领取自己的成绩单。当这批同学领取完毕后，L 老师再从剩余的成绩单中抽取连续的一段，供下一批同学领取。经过若干批次的领取后，成绩单将被全部发放到同学手中。</p>\n<p>然而，分发成绩单是一件令人头痛的事情，一方面要照顾同学们的心理情绪，不能让分数相差太远的同学在同一批领取成绩单；另一方面要考虑时间成本，尽量减少领取成绩单的批次数。对于一个分发成绩单的方案，我们定义其代价为：</p>\n<p>$a \\times k+b \\times \\sum_{i=1}^{k}(\\text{max}_i-\\text{min}_i)^2$</p>\n<p>其中 $k$ 是分发的批次数，对于第 $i$ 批分发的成绩单，$\\text{max}_i$ 是最高分数，$\\text{min}_i$ 是最低分数，$a$ 和 $b$ 是给定的评估参数。 现在，请你帮助 L 老师找到代价最小的分发成绩单的方案，并将这个最小的代价告诉 L 老师。当然，分发成绩单的批次数 $k$ 是由你决定的。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>第一行包含一个正整数 $n$ ，表示成绩单的数量。 第二行包含两个非负整数 $a,b$，表示给定的评估参数。 第三行包含 $n$ 个正整数 ，$w_i$ 表示第 $i$ 张成绩单上的分数。</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>仅一个正整数，表示最小的代价是多少。</p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASIC\"><figure class=\"iseeu highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"symbol\">3 </span><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"symbol\">7 </span><span class=\"number\">10</span> <span class=\"number\">9</span> <span class=\"number\">10</span> <span class=\"number\">6</span> <span class=\"number\">7</span> <span class=\"number\">10</span> <span class=\"number\">7</span> <span class=\"number\">1</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"LSL\"><figure class=\"iseeu highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">15</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"数据范围与提示\"><a href=\"#数据范围与提示\" class=\"headerlink\" title=\"数据范围与提示\"></a>数据范围与提示</h2><p>$n \\leq 50, a \\leq 1500, b \\leq 10, w_i \\leq 1000$</p>\n<h2 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h2><p>设 $f[i][j]$ 表示把 $[i,j]$ 都拿光的最小代价，$g[i][j][k][l]$ 表示区间 $[i,j]$ 最后一次取的序列的最小值是 $k$，最大值是 $l$，且最后一次取的序列包含 $j$ 的最小代价。</p>\n<p>转移方程见代码。</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">52</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, a, b, m, d[N], w[N], f[N][N], g[N][N][N][N];</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::min; <span class=\"keyword\">using</span> <span class=\"built_in\">std</span>::max;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>, &amp;n, &amp;a, &amp;b);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> f), <span class=\"built_in\">memset</span>(g, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> g);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;w[i]), d[i] = w[i];</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::sort(d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>);</span><br><span class=\"line\">    m = <span class=\"built_in\">std</span>::unique(d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>) - d - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i) &#123;</span><br><span class=\"line\">        w[i] = <span class=\"built_in\">std</span>::lower_bound(d + <span class=\"number\">1</span>, d + m + <span class=\"number\">1</span>, w[i]) - d;</span><br><span class=\"line\">        f[i][i] = a, g[i][i][w[i]][w[i]] = f[i][i<span class=\"number\">-1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    f[n+<span class=\"number\">1</span>][n] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> L = <span class=\"number\">2</span>; L &lt;= n; ++L)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> l = <span class=\"number\">1</span>, r = L; r &lt;= n; ++l, ++r) &#123;</span><br><span class=\"line\">            g[l][r][w[r]][w[r]] = f[l][r<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = l; i &lt; r; ++i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; ++j)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt;= m; ++k) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> x = min(j, w[r]), y = max(k, w[r]);</span><br><span class=\"line\">                        g[l][r][x][y] = min(g[l][r][x][y], g[l][i][j][k] + f[i+<span class=\"number\">1</span>][r<span class=\"number\">-1</span>]);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = l; i &lt;= r; ++i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; ++j)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt;= m; ++k)</span><br><span class=\"line\">                        f[l][r] = min(f[l][r], g[l][i][j][k] + f[i+<span class=\"number\">1</span>][r] + a + b * (d[k] - d[j]) * (d[k] - d[j]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, f[<span class=\"number\">1</span>][n]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n","text":"题目描述期末考试结束了，班主任 L 老师要将成绩单分发到每位同学手中。L 老师共有 $n$ 份成绩单，按照编号从 $1$ 到 $n$ 的顺序叠放在桌子上，其中编号为 $i$ 的成绩单分数为 $W_i$。成绩单是按照批次发放的。发放成绩单时，L 老师会从当前的一叠成绩单中抽取连续的","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"DP套DP","slug":"DP套DP","count":1,"path":"api/tags/DP套DP.json"}]}]}